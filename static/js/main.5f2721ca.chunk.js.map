{"version":3,"sources":["components/navigation/Navigation.js","components/destinations/CreateDestination.js","components/destinations/SortDestinations.js","components/destinations/InformationOfDestination.js","components/Loading.js","components/destinations/ListDestinations.js","components/AppDetails.js","App.js","serviceWorker.js","index.js"],"names":["NavBar","className","to","CreateDestination","handleChange","e","setState","target","id","value","handleSubmit","preventDefault","props","handleNewDestination","state","name","country","price","description","difficulty","onSubmit","this","htmlFor","type","onChange","cols","rows","Component","SortDestinations","handleOnChangeSort","console","log","sortValue","handleOnSubmit","handleSort","action","InformationOfDestination","destinationInfo","Loading","ListDestinations","isDestinationsAvailable","listOfDestinations","length","map","index","AppDetails","priceSortFunctionLowToHigh","a","b","parseFloat","priceSortFunctionHighToLow","App","currentState","newListofDestinations","push","eventValue","sorted","sort","class","exact","path","component","render","Boolean","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.5f2721ca.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link, NavLink } from 'react-router-dom';\n\nconst NavBar = () => {\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">Destination Picker</Link>\n        <ul className='right'>\n          <li><Link to='/create'>Create Destination</Link></li>\n          <li><NavLink to='/destinations'>List Destinations</NavLink></li>\n        </ul>\n      </div>\n    </nav>\n  )\n}\n\nexport default NavBar;\n","import React, { Component } from 'react';\n\n\nclass CreateDestination extends Component {\n  constructor() {\n    super();\n    this.state = {\n      name: '',\n      country: '',\n      price: '',\n      description: '',\n      difficulty: '',\n    }\n  }\n\n  handleChange = (e) => {\n    this.setState({\n      [e.target.id]: e.target.value\n    })\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.handleNewDestination(this.state)\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <form onSubmit={this.handleSubmit} className=\"white\">\n          <h3>Create a destination to travel</h3>\n          <div className=\"input-field\">\n            <label htmlFor=\"name\">name</label>\n            <input type=\"text\" id=\"name\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"country\">country</label>\n            <input type=\"text\" id=\"country\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"price\">price</label>\n            <input type=\"text\" id=\"price\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"difficulty\">difficulty</label>\n            <input type=\"text\" id=\"difficulty\" onChange={this.handleChange} />\n          </div>\n          <div className=\"input-field\">\n            <label htmlFor=\"description\">description</label>\n            <textarea name=\"description\" id=\"description\" cols=\"30\" rows=\"10\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n          </div>\n          <div className=\"input-field\">\n            <button className=\"btn blue\">Submit</button>\n          </div>\n        </form>\n      </div>\n    )\n  }\n\n\n\n\n}\n\nexport default CreateDestination;","import React, { Component } from 'react';\n\nclass SortDestinations extends Component {\n  constructor() {\n    super();\n    this.state = {\n      sortValue: '',\n    }\n  }\n\n\n  handleOnChangeSort = (e) => {\n    console.log(e.target.value)\n    this.setState({\n      sortValue: e.target.value,\n      // isLowFirstChecked: true\n    })\n  }\n\n  handleOnSubmit = (e) => {\n    e.preventDefault()\n    console.log(this.state.sortValue)\n    this.props.handleSort(this.state.sortValue)\n    this.setState({\n      sortValue: ''\n    })\n  }\n\n  render() {\n    return (\n      <div className=\"sortDestinations section container\">\n        <form action=\"#\" onSubmit={this.handleOnSubmit}>\n          <div>\n            <p>\n              <label>\n                <input name=\"group1\" type=\"radio\" value=\"highestPriceFirst\" onChange={this.handleOnChangeSort} />\n                <span>Highest Price</span>\n              </label>\n            </p>\n            <p>\n              <label>\n                <input name=\"group1\" type=\"radio\" value=\"lowestPriceFirst\" onChange={this.handleOnChangeSort} />\n                <span>Lowest Price</span>\n              </label>\n            </p>\n          </div>\n          <button className=\"sortButton\">Sort</button>\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default SortDestinations;","import React from 'react';\n\nconst InformationOfDestination = (props) => {\n  console.log(props.destinationInfo)\n  const { country, description, difficulty, name, price } = props.destinationInfo;\n\n  return (\n    <div className=\"destinationsList section container\">\n      <div className=\"card destinationsInformation\">\n        <div className=\"card-content\">\n          <h2 className=\"card-title\">{name}</h2>\n          <p>{country}</p>\n          <p>{price}</p>\n          <p>{difficulty}</p>\n          <p>{description}</p>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default InformationOfDestination;","import React from 'react'\n\n\nconst Loading = () => {\n  return (\n    <div className=\"container\">\n      <p>No data - go to 'Create Destination' and submit a destination</p>\n    </div>\n  )\n}\n\nexport default Loading;","import React, { Component } from 'react';\nimport SortDestinations from './SortDestinations';\nimport InformationOfDestination from './InformationOfDestination'\nimport Loading from '../Loading';\n\n\nclass ListDestinations extends Component {\n\n\n  render() {\n    const isDestinationsAvailable = this.props.listOfDestinations.length;\n    return (\n      <>\n        <SortDestinations handleSort={this.props.handleSort} />\n        {/* {console.log(this.props.listOfDestinations)} */}\n        {/* {this.props.listOfDestinations.map((destinationInfo, index) => {\n          return <InformationOfDestination destinationInfo={destinationInfo} index={index} />\n        })} */}\n        {/* {console.log(Boolean(isDestinationsAvailable))} */}\n        {isDestinationsAvailable ?\n          (this.props.listOfDestinations.map((destinationInfo, index) => {\n            return <InformationOfDestination destinationInfo={destinationInfo} index={index} />\n          }))\n          : <Loading />}\n      </>\n    )\n  }\n}\n\nexport default ListDestinations;","import React from 'react';\n\n\nconst AppDetails = () => {\n  return (\n    <div className='container section'>\n      <p>Welcome to the trip advisor app</p>\n      <p>You can do the following things:</p>\n      <ol>\n        <li>Create a destination you'd like to visit</li>\n        <li>See all previously created destinations and sort them</li>\n      </ol>\n    </div>\n  )\n}\n\nexport default AppDetails;","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/navigation/Navigation';\nimport CreateDestination from './components/destinations/CreateDestination'\nimport ListDestinations from './components/destinations/ListDestinations'\nimport AppDetails from './components/AppDetails'\n\nconst priceSortFunctionLowToHigh = (a, b) => {\n  return parseFloat(a.price) - parseFloat(b.price)\n}\nconst priceSortFunctionHighToLow = (a, b) => {\n  return parseFloat(b.price) - parseFloat(a.price)\n}\n\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      listOfDestinations: [],\n    }\n  }\n\n  handleNewDestination = (currentState) => {\n    const newListofDestinations = [...this.state.listOfDestinations]\n    console.log(newListofDestinations)\n    newListofDestinations.push(currentState);\n    this.setState({\n      listOfDestinations: newListofDestinations,\n    })\n  }\n\n  handleSort = (eventValue) => {\n    const newListofDestinations = [...this.state.listOfDestinations]\n    console.log(eventValue)\n    if (eventValue === \"lowestPriceFirst\") {\n      const sorted = newListofDestinations.sort(priceSortFunctionLowToHigh)\n      console.log(sorted)\n      this.setState({\n        listOfDestinations: sorted\n      })\n    }\n\n    else if (eventValue === \"highestPriceFirst\") {\n      const sorted = newListofDestinations.sort(priceSortFunctionHighToLow)\n      console.log(sorted)\n      this.setState({\n        listOfDestinations: sorted\n      })\n      console.log(this.state.listOfDestinations)\n    }\n  }\n\n  render() {\n    return (\n      <BrowserRouter>\n        <div class=\"app\">\n          <NavBar />\n          <Switch>\n            <Route exact path='/' component={AppDetails} />\n            <Route path='/destinations' render={(props) => <ListDestinations {...props} listOfDestinations={this.state.listOfDestinations} handleSort={this.handleSort} />} />\n            <Route path='/create' render={(props) => <CreateDestination {...props} handleNewDestination={this.handleNewDestination} />} />\n          </Switch>\n        </div>\n      </BrowserRouter >\n    )\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}